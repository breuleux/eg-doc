
require-macros:
   earl-gulp -> task

require:
   @breuleux/engage-config
   node-static
   gulp
   http

   path
   "globby" -> sync as globby
   vinyl-source-stream
   vinyl-buffer
   gulp-uglify
   promisify! end-of-stream



opts = {
   hostname = "http://breuleux.github.io"
   root = "/earl-grey/"
   assets-root = "/earl-grey/assets/"
   default-language = "earlgrey"
   default-extension = ".html"
   default-image-extension = ".png"
   server-port = "3005"
}

task make:
   engage-config{opts}.start{}

task serve:
   s = new node-static.Server{"./output"}
   http.create-server{f}.listen{opts.server-port} where f{req, res} =
      req.add-listener{.end, f}.resume{} where f{} =
         s.serve{req, res}
   print 'Listening on port {opts.server-port}'


paths = {
   examples-in = "./examples/**/*.eg"
   examples-out = './output{opts.root}examples'

   eg-in = {"./lib/**/*.eg", "!./lib/eg.eg"}
   eg2-in = "./lib/eg.eg"
   eg-out = './output{opts.root}'
}

async script-task{p, opts} =
   require:
      earlify, browserify
   files = await globby{p}
   await all files each file ->
      b = browserify with {
         entries = {file}
         transform = {earlify}
      }
      b.external{opts.externals or {}}
      b.require{file, {expose = path.basename{file}[...-3]}}
      target = chain file:
         @replace{R".eg$", ".js"}
         @replace{R"^./content/", ""}
      chain b.bundle{}:
         @pipe{vinyl-source-stream{target}}
         @pipe{vinyl-buffer{}}
         if{opts.uglify, @pipe{gulp-uglify{}}, @}
         @pipe{gulp.dest{paths.eg-out}}
         end-of-stream{@}

task scripts:
   script-task{paths.eg-in, externals = "eg", uglify = true}

task scripts2:
   script-task{paths.eg2-in, uglify = true}

task examples:
   chain gulp:
      @src{paths.examples-in}
      @pipe{gulp.dest{paths.examples-out}}




task default < {make, serve}
